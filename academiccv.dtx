% \iffalse meta-comment
%
% Copyright (C) 2023 by Gaëtan Staquet
% -----------------------------------
%
% This file may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in:
%
%    http://www.latex-project.org/lppl.txt
%
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{\jobname.dtx}
%</driver>
%<class>\NeedsTeXFormat{LaTeX2e}
%<class>\ProvidesExplClass{academiccv}{2023/08/10}{v0.2}{Academic curriculum vitae document class}
%
%<class>\LoadClass{article} % TODO: remove once everything is defined
%<class>\RequirePackage{etoolbox}
%<class>\RequirePackage{xparse}
%<class>\RequirePackage{xspace}
%<class>\RequirePackage[unicode]{hyperref}
%<class>\RequirePackage{graphicx}
%<class>\RequirePackage[usenames, dvipsnames, svgnames, x11names]{xcolor}
%<class>\RequirePackage{fontawesome5}
%<class>\RequirePackage[compact]{titlesec}
%<class>\RequirePackage{tikz}
%
%<class>\RequirePackage{academiccv-section}
%<class>\RequirePackage{academiccv-title}
%<class>\RequirePackage{academiccv-publication}
%<class>\RequirePackage{academiccv-item}
%<class>\RequirePackage{academiccv-job}
%<class>\RequirePackage{academiccv-talk}
%<class>\RequirePackage{academiccv-teach}
%<class>\RequirePackage{academiccv-supervision}
%<class>\RequirePackage{academiccv-project}
%
%<*driver>
\documentclass[a4paper]{l3doc}
\usepackage{xparse}
\usepackage{expl3}
\usepackage{booktabs}
\usepackage{hyperref}
\usepackage{cleveref}
\usepackage{csquotes}
\usepackage{fontawesome5}
\begin{document}
  \DisableImplementation
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{\jobname.dtx}
%
% \title{The \textsf{academiccv} class}
% \author{Gaëtan Staquet}
%
% \maketitle
%
% \begin{documentation}
%
% \begin{abstract}
%   Put text here.
% \end{abstract}
%
% \tableofcontents
%
% \section{Introduction}
%
% Put text here.
%
% Written in Expl3, and uses the variable type.
% In particular, a token list can be any sequence of characters and \LaTeX commands.
% For instance, \verb!{Gaëtan Staquet}! and \verb!{Gaëtan \and Staquet}! are both
% valid token lists.
%
% Define module.
% Most of the modules provide a command to typeset a particular entry (including
% the style to apply to that particular entry), and a
% command to define the style globally (for all entries that follow).
%
% \section{Typesetting tools}
%
% We start with functions that can be used to easily typeset fields of a given
% type defined by the modules, while automatically using the appropriate styles.
% They are heavily used in the commands and environments of the following sections.
% We highly recommend relying on these functions when redefining these commands
% and environments, or even defining yours.
% By default, the field types in the functions are \verb!tl! (token lists).
% The exact names and types of the available variables are described in the
% documentation of each module.
%
% \begin{function}{\useVSpace}
%   \begin{syntax}
%     \cs{useVSpace} \marg{module} \marg{field} \oarg{add}
%   \end{syntax}
% Retrieves the variable \meta{field} from \meta{module} holding a \enquote{skip}
% value.
% It then adds \meta{add}, and creates a vertical space of the resulting size.
%
% The default value of \meta{add} is \verb!0pt!.
% \end{function}
%
% \begin{function}{\formatURL}
%   \begin{syntax}
%     \cs{formatURL} \marg{prefix} \marg{suffix}
%   \end{syntax}
% Creates a link by concatenating \meta{prefix} and the contents of the variable
% named \meta{suffix} while outputting only the contents of \meta{suffix}.
% \end{function}
%
% \begin{function}{\ifemptyTF, \iftrueTF}
%   \begin{syntax}
%     \cs{ifemptyTF} \marg{module} \marg{field} \oarg{field type} \marg{true} \marg{false}
%     \cs{iftrueTF} \marg{module} \marg{field} \marg{true} \marg{false}
%   \end{syntax}
% \cs{ifemptyTF} tests if the variable \meta{field} of \meta{module} of
% type \meta{field type} is empty.
% If it is empty, it executes \meta{true}, otherwise, \meta{false}.
%
% \cs{iftrueTF} tests if the \emph{boolean} variable \meta{field} of \meta{module}
% if true.
% \end{function}
%
% \begin{function}{\print}
%   \begin{syntax}
%     \cs{print} \oarg{prefix} \marg{module} \marg{field} \oarg{suffix} \oarg{field type}
%   \end{syntax}
%   Prints the value stored in the variable for \meta{field} of \meta{module}
%   and of type \meta{field type}, using the appropriate formatting style.
%   
%   If the variable is empty, prints nothing.
% \end{function}
%
% \begin{function}{\printURL}
%   \begin{syntax}
%     \cs{printURL} \oarg{prefix} \marg{module} \marg{field} \marg{URL prefix} \oarg{suffix} \oarg{field type}
%   \end{syntax}
%   Similar to \cs{print} but calls \cs{formatURL} with \meta{URL prefix} and
% the contents of the variable.
% \end{function}
%
% \section{The \enquote{title} module}
%
% The title produced by the \verb!academiccv! class contains multiple fields,
% such as the name, current affiliation(s) and position, email address(es),
% links to a personnal website, etc.
% To configure the values that must appear and typeset the title, simply use
% the following command.
%
% \begin{function}{\makecvtitle}
%   \begin{syntax}
%     \cs{makecvtitle} \marg{key-value pairs}
%   \end{syntax}
% where \meta{key-value pairs} are pairs \verb!key = value!, separated by a comma,
% coming from \Cref{tab:makecvtitle}.
% By default, all values are empty and, thus, not displayed.
% It is possible to overwrite style directly within this command.
% See \Cref{tab:titleSetup} for the corresponding keys, and \cs{titleSetup} for
% the command.
%
% This function also sets up the author and title metadata. If you desire to
% modify this, call \cs{hypersetup} of package \verb!hyperref! after \cs{makecvtitle}.
% \end{function}
%
% \begin{table}
% \centering
% \begin{tabular}{l l p{160pt} r}
% \toprule
% Key & Value type & Details & Required\\
% \midrule
% \verb!author! & Token list & The author of the CV & Yes\\
% \verb!position! & Token list & The current position of the author & No\\
% \verb!affiliations! & Token list & The current affiliations of the author & No\\
% \verb!photo! & Token list & The path to the portrait file to display. Can be omitted but horizontal space will still be reserved (i.e., the result will be ugly), if you do not modify the corresponding style (see \cs{titleSetup}) & No\\
% \verb!email! & Token list & One email address. Can be present multiple times and all addresses will be accumulated. & No\\
% \verb!website! & Token list & URL (without \verb!https://!) to the author's website & No\\
% \verb!github! & Token list & GitHub's \textbf{username} & No\\
% \verb!orcid! & Token list & ORCID \textbf{number} & No\\
% \verb!linkedIn! & Token list & LinkedIn \textbf{id} & No\\
% \verb!street! & Token list & Office's street and number & No\\
% \verb!zipcode! & Token list & Office's zipcode & No\\
% \verb!city! & Token list & Office's city & No\\
% \verb!country! & Token list & Office's country & No\\
% \verb!style! & Key-value pairs & Overwrites style & No\\
% \bottomrule
% \end{tabular}
% \caption{Keys and expected type for \cs{makecvtitle}.}%
% \label{tab:makecvtitle}
% \end{table}
%
% Styles can be changed with the following command.
%
% \begin{function}{\titleSetup}
%   \begin{syntax}
%     \cs{titleSetup} \marg{key-value pairs}
%   \end{syntax}
% where \meta{key-value pairs} are pairs \verb!key = value!, separated by a comma,
% coming from \Cref{tab:titleSetup}.
% \end{function}
%
% \begin{table}
% \centering
% \begin{tabular}{l p{45pt} p{134pt} r}
% \toprule
% Key & Value type & Details & Default value\\
% \midrule
% \verb!author! & Token list & Style for the author & \verb!{\Huge\bfseries}!\\
% \verb!position! & Token list & Style for the position & \verb!{\itshape}!\\
% \verb!affiliations! & Token list & Style for the affiliations & \verb!{\small}!\\
% \verb!street! & Token list & Style for the street and number & \verb!{\small}!\\
% \verb!zipcode! & Token list & Style for the zipcode & \verb!{\small}!\\
% \verb!city! & Token list & Style for the city & \verb!{\small}!\\
% \verb!country! & Token list & Style for the country & \verb!{\small}!\\
% \verb!address! & Token list & Defines the style for \verb!street!, \verb!zipcode!, \verb!city!, and \verb!address! & \\
% \verb!email! & Token list & Style for the email address(es) & \verb!{\small}!\\
% \verb!website! & Token list & Style for the website URL & \verb!{\small}!\\
% \verb!github! & Token list & Style for the GitHub link & \verb!{\small}!\\
% \verb!orcid! & Token list & Style for the orcid link & \verb!{\small}!\\
% \verb!linkedIn! & Token list & Style for the linkedIn link & \verb!{\small}!\\
% \verb!links! & Token list & Defines the style for \verb!email!, \verb!website!, \verb!github!, \verb!orcid!, and \verb!linkedIn! &\\
% \verb!date! & Token list & Style to print the date of the last update & \verb!{\footnotesize}!\\
% \verb!vertical-space! & Skip & Size of the vertical space between the author and the position & \verb!1em!\\
% \verb!portion-photo! & Floating-point number & Portion of the line width to reserve for the portrait picture & \verb!.25!\\
% \bottomrule
% \end{tabular}
% \caption{Keys and expected type for \cs{titleSetup}.}%
% \label{tab:titleSetup}
% \end{table}
%
% \subsection{Fields and Styles}
%
% \begin{variable}{
%   \l_title_author_tl,
%   \l_title_position_tl,
%   \l_title_affiliations_tl,
%   \l_title_photo_tl,
%   \l_title_email_clist,
%   \l_title_website_tl,
%   \l_title_github_tl,
%   \l_title_orcid_tl,
%   \l_title_linkedIn_tl,
%   \l_title_street_tl,
%   \l_title_zipcode_tl,
%   \l_title_city_tl,
%   \l_title_country_tl,
% }
% Each field variable corresponds to a key of \Cref{tab:makecvtitle}.
% Observe that emails are stored within a \verb!clist! (comma separated list).
% See \cs{print} or \cs{printURL} for an easy way of typesetting the values stored
% in the fields.
% \end{variable}
%
% \begin{variable}{\l_title_authorStyle_tl}
% The style for the \verb!author! field.
% Initially equals to \verb!{\Huge\bfseries}!.
% \end{variable}
% \begin{variable}{\l_title_positionStyle_tl}
% The style for the \verb!position! field.
% Initially equals to \verb!{\itshape}!.
% \end{variable}
% \begin{variable}{\l_title_affiliationsStyle_tl}
% The style for the \verb!affiliations! field.
% Initially equals to \verb!{\small}!.
% \end{variable}
% \begin{variable}{\l_title_streetStyle_tl}
% The style for the \verb!street! field.
% Initially equals to \verb!{\small}!.
% \end{variable}
% \begin{variable}{\l_title_zipcodeStyle_tl}
% The style for the \verb!zipcode! field.
% Initially equals to \verb!{\small}!.
% \end{variable}
% \begin{variable}{\l_title_cityStyle_tl}
% The style for the \verb!city! field.
% Initially equals to \verb!{\small}!.
% \end{variable}
% \begin{variable}{\l_title_countryStyle_tl}
% The style for the \verb!country! field.
% Initially equals to \verb!{\small}!.
% \end{variable}
% \begin{variable}{\l_title_emailStyle_tl}
% The style for the \verb!email! field.
% Initially equals to \verb!{\small}!.
% \end{variable}
% \begin{variable}{\l_title_websiteStyle_tl}
% The style for the \verb!website! field.
% Initially equals to \verb!{\small}!.
% \end{variable}
% \begin{variable}{\l_title_githubStyle_tl}
% The style for the \verb!github! field.
% Initially equals to \verb!{\small}!.
% \end{variable}
% \begin{variable}{\l_title_orcidStyle_tl}
% The style for the \verb!orcid! field.
% Initially equals to \verb!{\small}!.
% \end{variable}
% \begin{variable}{\l_title_linkedInStyle_tl}
% The style for the \verb!linkedIn! field.
% Initially equals to \verb!{\small}!.
% \end{variable}
%
% \begin{variable}{\l_title_dateStyle_tl}
% If non empty, the sentence \enquote{Last updated on \cs{today}} (where \cs{today}
% is expanded), using this style.
% Redefine the command \cs{updatedMessage} to change the sentence.
% Initially equals to \verb!{\footnotesize}!.
% \end{variable}
%
% \begin{variable}{\l_title_vspace_skip}
% Governs the vertical space between the author and the position when typesetting
% the title with the initial commands.
% The vertical space between the position and the affiliation(s) is obtained by
% substracting \verb!.5em! from this variable.
% See \cs{useVSpace}.
% Initially equals to \verb!{1em}!.
% \end{variable}
%
% \begin{variable}{\l_title_portionForPhoto_fp}
% Governs the horizontal space to be reserved for the portrait picture, given in
% a decimal number in \([0, 1]\).
% The value is then multiplied by \verb!\linewidth! to obtain the final horizontal
% space.
% Initially equals to \verb!.25! (i.e., a quarter of the line width).
% \end{variable}
%
% \subsection{Typesetting Commands}
%
% \begin{function}{\formatAddress}
%   \begin{syntax}
%     \cs{formatAddress}
%   \end{syntax}
% Typesets the office's address.
% \end{function}
%
% \begin{function}{\formatEmail}
%   \begin{syntax}
%     \cs{formatEmail} \marg{email address}
%   \end{syntax}
% Typesets a single email address.
% By default, this draws a little envelope \faEnvelope[regular]
% (using \cs{faEnvelope[regular]} from package \verb!fontawesome5!), and calls the
% command
% \cs{formatURL}\verb!{mailto:}!\marg{email address}.
% \end{function}
%
% \begin{function}{\formatEmails}
%   \begin{syntax}
%     \cs{formatEmails}
%   \end{syntax}
% For every email address stored in the field \verb!email!, calls
% \cs{formatEmail} on that address.
% Only redefine this if you know how to use comma separated list.
% \end{function}
%
% \begin{function}{\formatLinks}
%   \begin{syntax}
%     \cs{formatLinks}
%   \end{syntax}
% Typesets the links.
% By default, it prints the email addresses, the website URL preceded by \faHome{} 
% (\verb!\faHome! from package \verb!{fontawesome5}!),
% the GitHub link preceded by \faGithub{} (\verb!\faGithub!),
% the ORCID link preceded by \faOrcid{} (\verb!\faOrcid!),
% and the LinkedIn link preceded by \faLinkedin{} (\verb!\faLinkedin!),
% in this order.
% \end{function}
%
% \begin{function}{\updatedMessage}
%   \begin{syntax}
%     \cs{updatedMessage}
%   \end{syntax}
% By default, typesets the sentence \enquote{Last updated on \cs{today}}, such that
% \cs{today} is expanded.
% \end{function}
%
% \begin{function}{\showUpdated}
%   \begin{syntax}
%     \cs{showUpdated}
%   \end{syntax}
% By default, calls the command \cs{updatedMessage}, using the appropriate style.
% \end{function}
%
% \begin{function}{\formatcvtitle}
%   \begin{syntax}
%     \cs{formatcvtitle}
%   \end{syntax}
% By default, creates two minipages that are displayed side by side.
% The first (on the left) contains the author, position, affiliations, the
% office's address and the links, in this order such that
% the author, position, and affiliations are centered.
% The second minipage (on the right) contains the portrait picture, and the
% message for the last update.
% \end{function}
%
% \section{The \enquote{section} module}
%
% The \verb!academiccv! class relies on the \verb!titlesec! package to change how
% section headings are typesetted.
% That is, it allows to draw rules above and below the headings, and to toggle
% whether the numbering is shown.
% Moreover, it is possible to draw a rectangle between the numbering (or the left
% margin) and the section's name, except for subsubsections.
% Note that the height of the rectangles is fixed (only the width and the color
% can vary).
% Sections, subsections, and subsubsections styles can be defined by the following
% commands.
%
% \begin{function}{\sectionSetup, \subsectionSetup, \subsubsectionSetup}
%   \begin{syntax}
%     \cs{sectionSetup} \marg{key-value pairs}
%     \cs{subsectionSetup} \marg{key-value pairs}
%     \cs{subsubsectionSetup} \marg{key-value pairs}
%   \end{syntax}
% where \meta{key-value pairs} are pairs \verb!key = value!, separated by a comma,
% coming from \Cref{tab:sectionSetup}.
% The three commands expect the same key-value pairs, and their default values
% are the same.
% Note that the keys starting with \verb!rectangle/! are not defined for
% subsubsections.
%
% It is highly recommended that the rectangle and the numbering are not both
% shown at the same time.
% \end{function}
%
% \begin{table}
% \centering
% \begin{tabular}{l p{45pt} p{95pt} r}
% \toprule
% Key & Value type & Details & Default value\\
% \midrule
% \verb!show-number! & Boolean & Whether to show the numbering & \verb!false!\\
% \verb!style! & Token list & Headings style & \verb!{\Large\bfseries}!\\
% \verb!hspace! & Skip & Horizontal space between the numbering and the title & \verb!2em!\\
% \midrule
% \verb!before/vspace-before! & Skip & Vertical space before the upper rule & \verb!3pt!\\
% \verb!before/width! & Skip & The width of the upper rule & \verb!2pt!\\
% \verb!before/color! & Color & The color of the upper rule (must be of the shape \verb!red! or \verb?red!70!blue?) & \verb!black!\\
% \verb!before/vspace-after! & Skip & Vertical space after the upper rule & \verb!5pt!\\
% \midrule
% \verb!after/vspace-before! & Skip & Vertical space before the lower rule & \verb!3pt!\\
% \verb!after/width! & Skip & The width of the lower rule & \verb!2pt!\\
% \verb!after/color! & Color & The color of the lower rule (must be of the shape \verb!red! or \verb?red!70!blue?) & \verb!black!\\
% \verb!after/vspace-after! & Skip & Vertical space after the lower rule & \verb!5pt!\\
% \midrule
% \verb!rectangle/width! & Floating-point number & Width of the rectangle (in TikZ' coordinate system) & \verb!4!\\
% \verb!rectangle/color! & Color & The color of the rectangle (must be of the shape \verb!red! or \verb?red!70!blue?) & \verb!black!\\
% \bottomrule
% \end{tabular}
% \caption{Keys and expected type for \cs{sectionSetup}, \cs{subsectionSetup},
% and \cs{subsubsectionSetup}.}%
% \label{tab:sectionSetup}
% \end{table}
%
% Since this module does not define any typesetting function, variables are not
% listed.
%
% \section{The \enquote{publication} Module}
%
% The title produced by the \verb!academiccv! class contains multiple fields,
% such as the name, current affiliation(s) and position, email address(es),
% links to a personnal website, etc.
% To configure the values that must appear and typeset the title, simply use
% the following command.
%
% \begin{function}{\publication}
%   \begin{syntax}
%     \cs{publication} \marg{key-value pairs}
%   \end{syntax}
% where \meta{key-value pairs} are pairs \verb!key = value!, separated by a comma,
% coming from \Cref{tab:publication}.
% By default, all values are empty and, thus, not displayed.
% It is possible to overwrite some styles specifically for one publication.
% See \Cref{tab:publicationSetup} for the corresponding keys, and
% \cs{publicationSetup} for the command.
% \end{function}
%
% \begin{table}
% \centering
% \begin{tabular}{l l p{160pt} r}
% \toprule
% Key & Value type & Details & Required\\
% \midrule
% \verb!title! & Token list & The title of the publication & Yes\\
% \verb!authors! & Token list & The authors & Yes\\
% \verb!year! & Token list & The publication year & Yes\\
% \verb!reference! & Token list & The bibliography reference & No\\
% \verb!where! & Token list & The conference/journal & No\\
% \verb!shortWhere! & Token list & The acronym of the conference/journal & No\\
% \verb!doi! & Token list & The DOI & No\\
% \verb!doi-prefix! & Token list & What to print before the DOI & No\\
% \verb!arxiv! & Token list & The arXiv DOI & No\\
% \verb!arxiv-prefix! & Token list & What to print before the arXiv DOI & No\\
% \verb!style! & Key-value pairs & Overwrite style & No\\
% \bottomrule
% \end{tabular}
% \caption{Keys and expected type for \cs{publication}.}%
% \label{tab:publication}
% \end{table}
%
% Styles can be changed with the following command.
%
% \begin{function}{\publicationSetup}
%   \begin{syntax}
%     \cs{publicationSetup} \marg{key-value pairs}
%   \end{syntax}
% where \meta{key-value pairs} are pairs \verb!key = value!, separated by a comma,
% coming from \Cref{tab:publicationSetup}.
% \end{function}
%
% \begin{table}
% \centering
% \begin{tabular}{l l p{140pt} r}
% \toprule
% Key & Value type & Details & Default value\\
% \midrule
% \verb!title! & Token list & Style for the title & \verb!{\large\bfseries}!\\
% \verb!authors! & Token list & Style for the author & \verb!{\normalfont}!\\
% \verb!year! & Token list & Style for the year & \verb!{\normalfont}!\\
% \verb!reference! & Token list & Style for the reference & \verb!{\bfseries}!\\
% \verb!where! & Token list & Style for the conference/journal & \verb!{\itshape}!\\
% \verb!shortWhere! & Token list & Style for the acronym of conference/journal & \verb!{\itshape}!\\
% \verb!doi! & Token list & Style for the DOI link & \verb!{\normalfont}!\\
% \verb!arxiv! & Token list & Style for the arXiv link & \verb!{\normalfont}!\\
% \bottomrule
% \end{tabular}
% \caption{Keys and expected type for \cs{publicationSetup}.}%
% \label{tab:publicationSetup}
% \end{table}
%
% \subsection{Fields and Styles}
%
% \begin{variable}{
%   \l_publication_title_tl,
%   \l_publication_authors_tl,
%   \l_publication_year_tl,
%   \l_publication_ref_tl,
%   \l_publication_where_tl,
%   \l_publication_shortWhere_tl,
%   \l_publication_doi_tl,
%   \l_publication_doiPrefix_tl,
%   \l_publication_arxiv_tl,
%   \l_publication_arxivPrefix_tl,
% }
% Each field variable corresponds to a key of \Cref{tab:publication}.
% See \cs{print} or \cs{printURL} for an easy way of typesetting the values stored
% in the fields.
% \end{variable}
%
% \begin{variable}{\l_publication_titleStyle_tl}
% The style for the \verb!title! field.
% Initially equals to \verb!{\large\bfseries}!.
% \end{variable}
% \begin{variable}{\l_publication_authorsStyle_tl}
% The style for the \verb!authors! field.
% Initially equals to \verb!{\normalfont}!.
% \end{variable}
% \begin{variable}{\l_publication_yearStyle_tl}
% The style for the \verb!year! field.
% Initially equals to \verb!{\normalfont}!.
% \end{variable}
% \begin{variable}{\l_publication_refStyle_tl}
% The style for the \verb!ref! field.
% Initially equals to \verb!{\bfseries}!.
% \end{variable}
% \begin{variable}{\l_publication_whereStyle_tl}
% The style for the \verb!where! field.
% Initially equals to \verb!{\itshape}!.
% \end{variable}
% \begin{variable}{\l_publication_shortWhereStyle_tl}
% The style for the \verb!shortWhere! field.
% Initially equals to \verb!{\itshape}!.
% \end{variable}
% \begin{variable}{\l_publication_doiStyle_tl}
% The style for the \verb!doi! field.
% Initially equals to \verb!{\normalfont}!.
% \end{variable}
% \begin{variable}{\l_publication_arxivStyle_tl}
% The style for the \verb!arxiv! field.
% Initially equals to \verb!{\normalfont}!.
% \end{variable}
%
% \subsection{Typesetting Commands}
%
% \begin{function}{\printPublication}
%   \begin{syntax}
%     \cs{printPublication}
%   \end{syntax}
% Typesets a publication, using the fields and styles defined by \cs{publication}
% and \cs{publicationSetup}.
% By default, is prints the bibliography reference between square brackets,
% the title,
% the authors,
% the conference/journal,
% its acronym (in parenthesis if both the conference/journal and its acronym are given),
% the year,
% the DOI link,
% and the arXiv DOI link,
% in this order.
% \end{function}
%
% \section{The \enquote{item} module}
%
% This module defines a command that can be used for generic CV items.
% These items are split into two parts, called the \emph{margin} and the
% \emph{main}, separated by some horizontal space.
% By default, the margin is typesetted on the left and the main on the right
% (while being horizontally aligned at the top).
% It is possible to swap the order.
% The following modules offer an easy-to-use interface for specific purposes.
% 
% \begin{function}{\cvitem}
%   \begin{syntax}
%     \cs{cvitem} \oarg{style} \marg{margin} \marg{main}
%   \end{syntax}
% Creates an item, using \meta{margin} and \meta{main}.
% It is possible to override the style by providing key-value pairs as the first
% optional argument.
% See \Cref{tab:itemSetup} for the accepted pairs, and \cs{itemSetup} for the
% global command.
% \end{function}
%
% Styles can be defined globally thanks to the following command.
%
% \begin{function}{\itemSetup}
%   \begin{syntax}
%     \cs{itemSetup} \marg{key-value pairs}
%   \end{syntax}
% where \meta{key-value pairs} are pairs \verb!key = value!, separated by a comma,
% coming from \Cref{tab:itemSetup}.
% The size of the main part is automatically computed as the remaining horizontal
% space on the line after substracting the margin size and the space between
% the margin and the main part.
% \end{function}
%
% \begin{table}
% \centering
% \begin{tabular}{l l p{140pt} r}
% \toprule
% Key & Value type & Details & Default value\\
% \midrule
% \verb!swap! & Boolean & Whether to swap the margin and main positions & \verb!false!\\
% \verb!margin! & Token list & Style for the margin content & \verb!{\normalfont}!\\
% \verb!main! & Token list & Style for the main path & \verb!{\normalfont}!\\
% \midrule
% \verb!margin-size! & Skip & Size for the margin & \verb!{140pt}!\\
% \verb!space! & Skip & Size between the margin and main content & \verb!{5pt}!\\
% \verb!vspace-after! & Skip & Vertical space to add after the item & \verb!{6pt}!\\
% \bottomrule
% \end{tabular}
% \caption{Keys and expected type for \cs{itemSetup}.}%
% \label{tab:itemSetup}
% \end{table}
%
% Since this module does not provide any typesetting function, variables are not
% described.
%
% \section{The \enquote{job} module}
%
% To typeset past and current jobs, one can use generic CV items.
% This module provides a nice interface to simplify typesetting.
%
% \begin{function}{\job}
%   \begin{syntax}
%     \cs{job} \marg{key-value pairs}
%   \end{syntax}
% where \meta{key-value pairs} are pairs \verb!key = value!, separated by a comma,
% coming from \Cref{tab:job}.
% By default, all values are empty and, thus, not displayed.
% It is possible to overwrite some styles specifically for one job.
% See \Cref{tab:jobSetup} for the corresponding keys, and
% \cs{jobSetup} for the command to define styles globally.
% \end{function}
%
% \begin{table}
% \centering
% \begin{tabular}{l l l r}
% \toprule
% Key & Value type & Details & Required\\
% \midrule
% \verb!year! & Token list & Job's year(s) & No\\
% \verb!title! & Token list & Job's title & No\\
% \verb!affiliation! & Token list & Job's affiliation & No\\
% \verb!description! & Token list & Job's description & No\\
% \verb!style! & Key-value pairs & Overwrites style & No\\
% \bottomrule
% \end{tabular}
% \caption{Keys and expected type for \cs{job}.}%
% \label{tab:job}
% \end{table}
% 
% Styles can be defined globally thanks to the following command.
%
% \begin{function}{\jobSetup}
%   \begin{syntax}
%     \cs{jobSetup} \marg{key-value pairs}
%   \end{syntax}
% where \meta{key-value pairs} are pairs \verb!key = value!, separated by a comma,
% coming from \Cref{tab:jobSetup}.
% The size of the main part is automatically computed as the remaining horizontal
% space on the line after substracting the margin size and the space between
% the margin and the main part.
% \end{function}
%
% \begin{table}
% \centering
% \begin{tabular}{l l p{140pt} r}
% \toprule
% Key & Value type & Details & Default value\\
% \midrule
% \verb!year! & Token list & Style for the job's year(s) & \verb!{\bfseries}!\\
% \verb!title! & Token list & Style for the job's title & \verb!{\bfseries}!\\
% \verb!affiliation! & Token list & Style for the job's affilition & \verb!{\small}!\\
% \verb!description! & Token list & Style for the job's description & \verb!{\small}!\\
% \midrule
% \verb!swap! & Boolean & Whether to swap the margin and main positions & \verb!false!\\
% \verb!margin-size! & Skip & Size for the margin & \verb!{80pt}!\\
% \verb!space! & Skip & Size between the margin and main content & \verb!{5pt}!\\
% \verb!vspace-after! & Skip & Vertical space to add after the item & \verb!{6pt}!\\
% \bottomrule
% \end{tabular}
% \caption{Keys and expected type for \cs{jobSetup}.}%
% \label{tab:jobSetup}
% \end{table}
%
% \subsection{Fields and Styles}
%
% \begin{variable}{
%   \l_job_year_tl,
%   \l_job_title_tl,
%   \l_job_affiliation_tl,
%   \l_job_description_tl,
% }
% Each field variable corresponds to a key of \Cref{tab:job}.
% See \cs{print} or \cs{printURL} for an easy way of typesetting the values stored
% in the fields.
% \end{variable}
%
% \begin{variable}{\l_job_yearStyle_tl}
% The style for the \verb!year! field.
% Initially equals to \verb!{\bfseries}!.
% \end{variable}
% \begin{variable}{\l_job_titleStyle_tl}
% The style for the \verb!title! field.
% Initially equals to \verb!{\bfseries}!.
% \end{variable}
% \begin{variable}{\l_job_affiliationStyle_tl}
% The style for the \verb!affiliation! field.
% Initially equals to \verb!{\small}!.
% \end{variable}
% \begin{variable}{\l_job_descriptionStyle_tl}
% The style for the \verb!description! field.
% Initially equals to \verb!{\small}!.
% \end{variable}
% Variables tied to the \enquote{item} module are not displayed here, as they are
% not meant to be accessed.
%
% \subsection{Typesetting Commands}
%
% \begin{function}{\marginForJob}
%   \begin{syntax}
%     \cs{marginForJob}
%   \end{syntax}
% Typesets the content of the margin part for a job.
% By default, it displays the year and affilition, each on their own line.
% \end{function}
%
% \begin{function}{\mainForJob}
%   \begin{syntax}
%     \cs{mainForJob}
%   \end{syntax}
% Typesets the content of the main part for a job.
% By default, it displays the title and description, each on their own line.
% \end{function}
%
% \section{The \enquote{talk} module}
%
% To typeset given talks, one can use generic CV items.
% This module provides a nice interface to simplify typesetting.
%
% \begin{function}{\talk}
%   \begin{syntax}
%     \cs{talk} \marg{key-value pairs}
%   \end{syntax}
% where \meta{key-value pairs} are pairs \verb!key = value!, separated by a comma,
% coming from \Cref{tab:talk}.
% By default, all values are empty and, thus, not displayed.
% It is possible to overwrite some styles specifically for one talk.
% See \Cref{tab:talkSetup} for the corresponding keys, and
% \cs{talkSetup} for the command to define styles globally.
% \end{function}
%
% \begin{table}
% \centering
% \begin{tabular}{l l l r}
% \toprule
% Key & Value type & Details & Required\\
% \midrule
% \verb!date! & Token list & Talk's date & No\\
% \verb!title! & Token list & Talk's title & No\\
% \verb!conference! & Token list & Talk's conference & No\\
% \verb!where! & Token list & Talk's location & No\\
% \verb!style! & Key-value pairs & Overwrites style & No\\
% \bottomrule
% \end{tabular}
% \caption{Keys and expected type for \cs{talk}.}%
% \label{tab:talk}
% \end{table}
% 
% Styles can be defined globally thanks to the following command.
%
% \begin{function}{\talkSetup}
%   \begin{syntax}
%     \cs{talkSetup} \marg{key-value pairs}
%   \end{syntax}
% where \meta{key-value pairs} are pairs \verb!key = value!, separated by a comma,
% coming from \Cref{tab:talkSetup}.
% The size of the main part is automatically computed as the remaining horizontal
% space on the line after substracting the margin size and the space between
% the margin and the main part.
% \end{function}
%
% \begin{table}
% \centering
% \begin{tabular}{l l p{140pt} r}
% \toprule
% Key & Value type & Details & Default value\\
% \midrule
% \verb!date! & Token list & Style for the talk's date & \verb!{\bfseries}!\\
% \verb!title! & Token list & Style for the talk's title & \verb!{\bfseries}!\\
% \verb!conference! & Token list & Style for the talk's conference & \verb!{\small}!\\
% \verb!where! & Token list & Style for the talk's location & \verb!{\small}!\\
% \midrule
% \verb!swap! & Boolean & Whether to swap the margin and main positions & \verb!false!\\
% \verb!margin-size! & Skip & Size for the margin & \verb!{80pt}!\\
% \verb!space! & Skip & Size between the margin and main content & \verb!{5pt}!\\
% \verb!vspace-after! & Skip & Vertical space to add after the item & \verb!{6pt}!\\
% \bottomrule
% \end{tabular}
% \caption{Keys and expected type for \cs{talkSetup}.}%
% \label{tab:talkSetup}
% \end{table}
%
% \subsection{Fields and Styles}
%
% \begin{variable}{
%   \l_talk_date_tl,
%   \l_talk_title_tl,
%   \l_talk_conference_tl,
%   \l_talk_where_tl,
% }
% Each field variable corresponds to a key of \Cref{tab:talk}.
% See \cs{print} or \cs{printURL} for an easy way of typesetting the values stored
% in the fields.
% \end{variable}
%
% \begin{variable}{\l_talk_dateStyle_tl}
% The style for the \verb!date! field.
% Initially equals to \verb!{\normalfont}!.
% \end{variable}
% \begin{variable}{\l_talk_titleStyle_tl}
% The style for the \verb!title! field.
% Initially equals to \verb!{\bfseries}!.
% \end{variable}
% \begin{variable}{\l_talk_conferenceStyle_tl}
% The style for the \verb!conference! field.
% Initially equals to \verb!{\normalfont}!.
% \end{variable}
% \begin{variable}{\l_talk_whereStyle_tl}
% The style for the \verb!where! field.
% Initially equals to \verb!{\footnotesize}!.
% \end{variable}
% Variables tied to the \enquote{item} module are not displayed here, as they are
% not meant to be accessed.
%
% \subsection{Typesetting Commands}
%
% \begin{function}{\marginForTalk}
%   \begin{syntax}
%     \cs{marginForTalk}
%   \end{syntax}
% Typesets the content of the margin part for a talk.
% By default, it displays the date.
% \end{function}
%
% \begin{function}{\mainForTalk}
%   \begin{syntax}
%     \cs{mainForTalk}
%   \end{syntax}
% Typesets the content of the main part for a talk.
% By default, it displays the title, the conference, and the location,
% each on their own line.
% \end{function}
%
% \section{The \enquote{teach} module}
%
% To typeset teaching activites, one can use generic CV items.
% This module provides a nice interface to simplify typesetting.
%
% \begin{function}{\teach}
%   \begin{syntax}
%     \cs{teach} \marg{key-value pairs}
%   \end{syntax}
% where \meta{key-value pairs} are pairs \verb!key = value!, separated by a comma,
% coming from \Cref{tab:teach}.
% By default, all values are empty and, thus, not displayed.
% It is possible to overwrite some styles specifically for one course.
% See \Cref{tab:teachSetup} for the corresponding keys, and
% \cs{teachSetup} for the command to define styles globally.
% \end{function}
%
% \begin{table}
% \centering
% \begin{tabular}{l l l r}
% \toprule
% Key & Value type & Details & Required\\
% \midrule
% \verb!year! & Token list & Course's year(s) & No\\
% \verb!course! & Token list & Course's name & No\\
% \verb!role! & Token list & Role played in the course & No\\
% \verb!affiliation! & Token list & In which school & No\\
% \verb!description! & Token list & Course's description & No\\
% \verb!style! & Key-value pairs & Overwrites style & No\\
% \bottomrule
% \end{tabular}
% \caption{Keys and expected type for \cs{teach}.}%
% \label{tab:teach}
% \end{table}
% 
% Styles can be defined globally thanks to the following command.
%
% \begin{function}{\teachSetup}
%   \begin{syntax}
%     \cs{teachSetup} \marg{key-value pairs}
%   \end{syntax}
% where \meta{key-value pairs} are pairs \verb!key = value!, separated by a comma,
% coming from \Cref{tab:teachSetup}.
% The size of the main part is automatically computed as the remaining horizontal
% space on the line after substracting the margin size and the space between
% the margin and the main part.
% \end{function}
%
% \begin{table}
% \centering
% \begin{tabular}{l l p{140pt} r}
% \toprule
% Key & Value type & Details & Default value\\
% \midrule
% \verb!year! & Token list & Style for the year(s) & \verb!{\bfseries}!\\
% \verb!course! & Token list & Style for the course's name & \verb!{\bfseries}!\\
% \verb!role! & Token list & Style for the role played in the course & \verb!{\itshape}!\\
% \verb!affiliation! & Token list & Style for the affiliation & \verb!{\footnotesize}!\\
% \verb!description! & Token list & Style for the description & \verb!{\small}!\\
% \midrule
% \verb!swap! & Boolean & Whether to swap the margin and main positions & \verb!false!\\
% \verb!margin-size! & Skip & Size for the margin & \verb!{80pt}!\\
% \verb!space! & Skip & Size between the margin and main content & \verb!{5pt}!\\
% \verb!vspace-after! & Skip & Vertical space to add after the item & \verb!{6pt}!\\
% \bottomrule
% \end{tabular}
% \caption{Keys and expected type for \cs{teachSetup}.}%
% \label{tab:teachSetup}
% \end{table}
%
% \subsection{Fields and Styles}
%
% \begin{variable}{
%   \l_teach_year_tl,
%   \l_teach_course_tl,
%   \l_teach_role_tl,
%   \l_teach_affiliation_tl,
%   \l_teach_description_tl,
% }
% Each field variable corresponds to a key of \Cref{tab:teach}.
% See \cs{print} or \cs{printURL} for an easy way of typesetting the values stored
% in the fields.
% \end{variable}
%
% \begin{variable}{\l_teach_yearStyle_tl}
% The style for the \verb!year! field.
% Initially equals to \verb!{\bfseries}!.
% \end{variable}
% \begin{variable}{\l_teach_courseStyle_tl}
% The style for the \verb!course! field.
% Initially equals to \verb!{\bfseries}!.
% \end{variable}
% \begin{variable}{\l_teach_roleStyle_tl}
% The style for the \verb!role! field.
% Initially equals to \verb!{\itshape}!.
% \end{variable}
% \begin{variable}{\l_teach_affiliationStyle_tl}
% The style for the \verb!affiliation! field.
% Initially equals to \verb!{\footnotesize}!.
% \end{variable}
% \begin{variable}{\l_teach_descriptionStyle_tl}
% The style for the \verb!description! field.
% Initially equals to \verb!{\small}!.
% \end{variable}
% Variables tied to the \enquote{item} module are not displayed here, as they are
% not meant to be accessed.
%
% \subsection{Typesetting Commands}
%
% \begin{function}{\marginForTeach}
%   \begin{syntax}
%     \cs{marginForTeach}
%   \end{syntax}
% Typesets the content of the margin part for a course.
% By default, it displays the year(s).
% \end{function}
%
% \begin{function}{\mainForTeach}
%   \begin{syntax}
%     \cs{mainForTalk}
%   \end{syntax}
% Typesets the content of the main part for a course.
% By default, it displays the course's name and the role on the same line,
% followed by the description, and the affilition,
% each on their own line.
% \end{function}
%
% \section{The \enquote{supervision} module}
%
% To typeset supervision activites, one can use generic CV items.
% This module provides a nice interface to simplify typesetting.
%
% \begin{function}{\supervision}
%   \begin{syntax}
%     \cs{supervision} \marg{key-value pairs}
%   \end{syntax}
% where \meta{key-value pairs} are pairs \verb!key = value!, separated by a comma,
% coming from \Cref{tab:supervision}.
% By default, all values are empty and, thus, not displayed.
% It is possible to overwrite some styles specifically for one course.
% See \Cref{tab:supervisionSetup} for the corresponding keys, and
% \cs{supervisionSetup} for the command to define styles globally.
% \end{function}
%
% \begin{table}
% \centering
% \begin{tabular}{l l l r}
% \toprule
% Key & Value type & Details & Required\\
% \midrule
% \verb!year! & Token list & Year(s) & No\\
% \verb!name! & Token list & Supervised's name & No\\
% \verb!role! & Token list & Role played in the supervision & No\\
% \verb!affiliation! & Token list & In which school & No\\
% \verb!description! & Token list & Description & No\\
% \verb!style! & Key-value pairs & Overwrites style & No\\
% \bottomrule
% \end{tabular}
% \caption{Keys and expected type for \cs{supervision}.}%
% \label{tab:supervision}
% \end{table}
% 
% Styles can be defined globally thanks to the following command.
%
% \begin{function}{\supervisionSetup}
%   \begin{syntax}
%     \cs{supervisionSetup} \marg{key-value pairs}
%   \end{syntax}
% where \meta{key-value pairs} are pairs \verb!key = value!, separated by a comma,
% coming from \Cref{tab:supervisionSetup}.
% The size of the main part is automatically computed as the remaining horizontal
% space on the line after substracting the margin size and the space between
% the margin and the main part.
% \end{function}
%
% \begin{table}
% \centering
% \begin{tabular}{l l p{140pt} r}
% \toprule
% Key & Value type & Details & Default value\\
% \midrule
% \verb!year! & Token list & Style for the year(s) & \verb!{\bfseries}!\\
% \verb!name! & Token list & Style for the supervised's name & \verb!{\bfseries}!\\
% \verb!role! & Token list & Style for the role played in the supervision & \verb!{\itshape}!\\
% \verb!affiliation! & Token list & Style for the affiliation & \verb!{\footnotesize}!\\
% \verb!description! & Token list & Style for the description & \verb!{\small}!\\
% \midrule
% \verb!swap! & Boolean & Whether to swap the margin and main positions & \verb!false!\\
% \verb!margin-size! & Skip & Size for the margin & \verb!{80pt}!\\
% \verb!space! & Skip & Size between the margin and main content & \verb!{5pt}!\\
% \verb!vspace-after! & Skip & Vertical space to add after the item & \verb!{6pt}!\\
% \bottomrule
% \end{tabular}
% \caption{Keys and expected type for \cs{supervisionSetup}.}%
% \label{tab:supervisionSetup}
% \end{table}
%
% \subsection{Fields and Styles}
%
% \begin{variable}{
%   \l_supervision_year_tl,
%   \l_supervision_name_tl,
%   \l_supervision_role_tl,
%   \l_supervision_affiliation_tl,
%   \l_supervision_description_tl,
% }
% Each field variable corresponds to a key of \Cref{tab:supervision}.
% See \cs{print} or \cs{printURL} for an easy way of typesetting the values stored
% in the fields.
% \end{variable}
%
% \begin{variable}{\l_supervision_yearStyle_tl}
% The style for the \verb!year! field.
% Initially equals to \verb!{\bfseries}!.
% \end{variable}
% \begin{variable}{\l_supervision_nameStyle_tl}
% The style for the \verb!name! field.
% Initially equals to \verb!{\bfseries}!.
% \end{variable}
% \begin{variable}{\l_supervision_roleStyle_tl}
% The style for the \verb!role! field.
% Initially equals to \verb!{\itshape}!.
% \end{variable}
% \begin{variable}{\l_supervision_affiliationStyle_tl}
% The style for the \verb!affiliation! field.
% Initially equals to \verb!{\footnotesize}!.
% \end{variable}
% \begin{variable}{\l_supervision_descriptionStyle_tl}
% The style for the \verb!description! field.
% Initially equals to \verb!{\small}!.
% \end{variable}
% Variables tied to the \enquote{item} module are not displayed here, as they are
% not meant to be accessed.
%
% \subsection{Typesetting Commands}
%
% \begin{function}{\marginForSupervision}
%   \begin{syntax}
%     \cs{marginForSupervision}
%   \end{syntax}
% Typesets the content of the margin part for a supervised project.
% By default, it displays the year(s).
% \end{function}
%
% \begin{function}{\mainForSupervision}
%   \begin{syntax}
%     \cs{mainForTalk}
%   \end{syntax}
% Typesets the content of the main part for a supervised project.
% By default, it displays the name (of the projet or the student(s)) and the
% role on the same line,
% followed by the description, and the affilition,
% each on their own line.
% \end{function}
%
% \section{The \enquote{project} module}
%
% To typeset important projects, one can use generic CV items.
% This module provides a nice interface to simplify typesetting.
%
% \begin{function}{\project}
%   \begin{syntax}
%     \cs{project} \marg{key-value pairs}
%   \end{syntax}
% where \meta{key-value pairs} are pairs \verb!key = value!, separated by a comma,
% coming from \Cref{tab:project}.
% By default, all values are empty and, thus, not displayed.
% It is possible to overwrite some styles specifically for one course.
% See \Cref{tab:projectSetup} for the corresponding keys, and
% \cs{projectSetup} for the command to define styles globally.
% \end{function}
%
% \begin{table}
% \centering
% \begin{tabular}{l l l r}
% \toprule
% Key & Value type & Details & Required\\
% \midrule
% \verb!shortName! & Token list & Short name for the project & No\\
% \verb!name! & Token list & Project's name & No\\
% \verb!role! & Token list & Role played in the project & No\\
% \verb!description! & Token list & Description & No\\
% \verb!style! & Key-value pairs & Overwrites style & No\\
% \bottomrule
% \end{tabular}
% \caption{Keys and expected type for \cs{project}.}%
% \label{tab:project}
% \end{table}
% 
% Styles can be defined globally thanks to the following command.
%
% \begin{function}{\projectSetup}
%   \begin{syntax}
%     \cs{projectSetup} \marg{key-value pairs}
%   \end{syntax}
% where \meta{key-value pairs} are pairs \verb!key = value!, separated by a comma,
% coming from \Cref{tab:projectSetup}.
% The size of the main part is automatically computed as the remaining horizontal
% space on the line after substracting the margin size and the space between
% the margin and the main part.
% \end{function}
%
% \begin{table}
% \centering
% \begin{tabular}{l l p{140pt} r}
% \toprule
% Key & Value type & Details & Default value\\
% \midrule
% \verb!shortName! & Token list & Style for the shortName & \verb!{\bfseries}!\\
% \verb!name! & Token list & Style for the supervised's name & \verb!{\bfseries}!\\
% \verb!role! & Token list & Style for the role played in the project & \verb!{\normalfont}!\\
% \verb!description! & Token list & Style for the description & \verb!{\small}!\\
% \midrule
% \verb!swap! & Boolean & Whether to swap the margin and main positions & \verb!false!\\
% \verb!margin-size! & Skip & Size for the margin & \verb!{80pt}!\\
% \verb!space! & Skip & Size between the margin and main content & \verb!{5pt}!\\
% \verb!vspace-after! & Skip & Vertical space to add after the item & \verb!{6pt}!\\
% \bottomrule
% \end{tabular}
% \caption{Keys and expected type for \cs{projectSetup}.}%
% \label{tab:projectSetup}
% \end{table}
%
% \subsection{Fields and Styles}
%
% \begin{variable}{
%   \l_project_shortName_tl,
%   \l_project_name_tl,
%   \l_project_role_tl,
%   \l_project_description_tl,
% }
% Each field variable corresponds to a key of \Cref{tab:project}.
% See \cs{print} or \cs{printURL} for an easy way of typesetting the values stored
% in the fields.
% \end{variable}
%
% \begin{variable}{\l_project_shortNameStyle_tl}
% The style for the \verb!shortName! field.
% Initially equals to \verb!{\bfseries}!.
% \end{variable}
% \begin{variable}{\l_project_nameStyle_tl}
% The style for the \verb!name! field.
% Initially equals to \verb!{\bfseries}!.
% \end{variable}
% \begin{variable}{\l_project_roleStyle_tl}
% The style for the \verb!role! field.
% Initially equals to \verb!{\normalfont}!.
% \end{variable}
% \begin{variable}{\l_project_descriptionStyle_tl}
% The style for the \verb!description! field.
% Initially equals to \verb!{\small}!.
% \end{variable}
% Variables tied to the \enquote{item} module are not displayed here, as they are
% not meant to be accessed.
%
% \subsection{Typesetting Commands}
%
% \begin{function}{\marginForProject}
%   \begin{syntax}
%     \cs{marginForProject}
%   \end{syntax}
% Typesets the content of the margin part for a project.
% By default, it displays the short name.
% \end{function}
%
% \begin{function}{\mainForProject}
%   \begin{syntax}
%     \cs{mainForTalk}
%   \end{syntax}
% Typesets the content of the main part for a project.
% By default, it displays the name and the role on the same line,
% followed by the description, on its own line.
% \end{function}
%
% \end{documentation}
%
% \begin{implementation}
%
% \section{Implementation details}
%
% \subsection{Formatting tools}

\ExplSyntaxOn

% \begin{macro}{\useVSpace}
%    \begin{macrocode}
\NewDocumentCommand{ \useVSpace } { m m O{0pt} } {
  \skip_vertical:n {\skip_eval:n {#3 + \use:c {l_#1_#2_skip}}}
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\formatURL}
% The function requires two variables, as \verb!\href! fails when we construct
% the text to be printed inside the argument.
%    \begin{macrocode}
\tl_new:N \l_url_tl
\tl_new:N \l_fullURL_tl
\NewDocumentCommand{ \formatURL } { m m } {
  \tl_set_eq:Nc \l_url_tl {#2}
  \tl_set:Nn \l_fullURL_tl {#1\l_url_tl}
  \href{\l_fullURL_tl}{\nolinkurl{\l_url_tl}}
}
%    \end{macrocode}
% \end{macro}
 
% \begin{macro}{\ifemptyTF}
%    \begin{macrocode}
\NewDocumentCommand { \ifemptyTF } { m m O{tl} m m } {
  \tl_if_empty:cTF {l_#1_#2_#3} {#4} {#5}
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\iftrueTF}
%    \begin{macrocode}
\NewDocumentCommand { \iftrueTF } { m m m m } {
  \bool_if:cTF {l_#1_#2_bool} {#3} {#4}
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\print, \printURL}
%    \begin{macrocode}
\NewDocumentCommand { \print } { O{} m m O{} O{tl} } {
  \ifemptyTF{#2}{#3}[#5]{}{
    {
      \use:c {l_#2_#3Style_tl}     % Style
      { % Content
        {#1}
        \use:c {l_#2_#3_tl}
        {#4}
      }  
    }
  }
}
%    \end{macrocode}
%
%    \begin{macrocode}
\NewDocumentCommand{ \printURL } { O{} m m m O{} O{tl} } {
  \ifemptyTF{#2}{#3}[#6]{}{
    {
      \use:c {l_#2_#3Style_tl}
      {
        {#1}
        \formatURL{#4}{l_#2_#3_#6}
        {#5}
      }
    }
  }
}
%    \end{macrocode}
% \end{macro}

\ExplSyntaxOff

% \end{implementation}

\endinput